vulgaris_annotations = read.csv("c_vulgaris_annotations.tsv", sep = '\t')
conductrix_annotations = read.csv("m_conductrix_annotations.tsv", sep = '\t')
variabilis_annotations = read.csv("c_variabilis_annotations.tsv", sep = '\t')
sorokiniana_annotations = read.csv("c_sorokiniana_annotations.tsv", sep = '\t')
setwd('/Users/catrionaharrison/documents/bioinformatics/rp2/genomes/proteins/function_annotations')
library(stringr)
library(tidyr)
library(dplyr)
library(ggplot2)
#Read in annotation files
a99_annotations =  read.csv("a99_annotations.tsv", sep = '\t')
vulgaris_annotations = read.csv("c_vulgaris_annotations.tsv", sep = '\t')
conductrix_annotations = read.csv("m_conductrix_annotations.tsv", sep = '\t')
variabilis_annotations = read.csv("c_variabilis_annotations.tsv", sep = '\t')
variabilis_annotations = read.csv("c_variabilis_annotations.tsv", sep = '\t')
#Read in annotation files
a99_annotations =  read.csv("a99_annotations.tsv", sep = '\t')
vulgaris_annotations = read.csv("c_vulgaris_annotations.tsv", sep = '\t')
conductrix_annotations = read.csv("m_conductrix_annotations.tsv", sep = '\t')
variabilis_annotations = read.csv("c_variabilis_annotations.tsv", sep = '\t')
sorokiniana_annotations = read.csv("c_sorokiniana_annotations.tsv", sep = '\t')
species = c('a99', 'vulgaris', 'conductrix', 'variabilis', 'sorokiniana')
#Read in file for orthogroups in each species
orthogroups = read.csv('../../OrthoFinder/Results_Aug14/Orthogroups/Orthogroups.tsv', sep = '\t')
#Make annotations into a single column and label OGs with KEGG pathways
#A99
reduced_orthogroups = data.frame(orthogroups$Orthogroup, orthogroups$a99_genome_proteins)
reduced_orthogroups %>%
mutate(orthogroups.a99_genome_proteins = strsplit(as.character(orthogroups.a99_genome_proteins), ",")) %>%
unnest(orthogroups.a99_genome_proteins) -> a99_single_col_orth
a99_single_col_orth %>%
mutate(across(where(is.character), str_trim)) ->single_col_orth
a99_ogs_pathways = data.frame(a99_annotations$X.query, a99_annotations$EC, a99_annotations$KEGG_Pathway, a99_annotations$BRITE)
colnames(a99_single_col_orth) = c("Orthogroup", "protein_name")
colnames(a99_ogs_pathways) = c("protein_name", "EC_number", "KEGG_pathways", "BRITE")
labelled_ogs_a99 = merge(a99_single_col_orth, a99_ogs_pathways, by = "protein_name", keep.x = TRUE)
labelled_ogs_a99 <- labelled_ogs_a99[-c(1)]
#conductrix
reduced_orthogroups = data.frame(orthogroups$Orthogroup, orthogroups$m_conductrix_genome_proteins)
reduced_orthogroups %>%
mutate(orthogroups.m_conductrix_genome_proteins = strsplit(as.character(orthogroups.m_conductrix_genome_proteins), ",")) %>%
unnest(orthogroups.m_conductrix_genome_proteins) -> conductrix_single_col_orth
conductrix_single_col_orth %>%
mutate(across(where(is.character), str_trim)) ->single_col_orth
conductrix_ogs_pathways = data.frame(conductrix_annotations$X.query,conductrix_annotations$EC, conductrix_annotations$KEGG_Pathway, conductrix_annotations$BRITE)
colnames(conductrix_single_col_orth) = c("Orthogroup", "protein_name")
colnames(conductrix_ogs_pathways) = c("protein_name", "EC_number", "KEGG_pathways", "BRITE")
labelled_ogs_conductrix = merge(conductrix_single_col_orth, conductrix_ogs_pathways, by = "protein_name", keep.x = TRUE)
labelled_ogs_conductrix <- labelled_ogs_conductrix[-c(1)]
#vulgaris
reduced_orthogroups = data.frame(orthogroups$Orthogroup, orthogroups$c_vulgaris_genome_proteins)
reduced_orthogroups %>%
mutate(orthogroups.c_vulgaris_genome_proteins = strsplit(as.character(orthogroups.c_vulgaris_genome_proteins), ",")) %>%
unnest(orthogroups.c_vulgaris_genome_proteins) -> vulgaris_single_col_orth
vulgaris_single_col_orth %>%
mutate(across(where(is.character), str_trim)) ->single_col_orth
vulgaris_ogs_pathways = data.frame(vulgaris_annotations$X.query,vulgaris_annotations$EC, vulgaris_annotations$KEGG_Pathway, vulgaris_annotations$BRITE)
colnames(vulgaris_single_col_orth) = c("Orthogroup", "protein_name")
colnames(vulgaris_ogs_pathways) = c("protein_name", "EC_number", "KEGG_pathways", "BRITE")
labelled_ogs_vulgaris = merge(vulgaris_single_col_orth, vulgaris_ogs_pathways, by = "protein_name", keep.x = TRUE)
labelled_ogs_vulgaris <- labelled_ogs_vulgaris[-c(1)]
#variabilis
reduced_orthogroups = data.frame(orthogroups$Orthogroup, orthogroups$c_variabilis_genome_proteins)
reduced_orthogroups %>%
mutate(orthogroups.c_variabilis_genome_proteins = strsplit(as.character(orthogroups.c_variabilis_genome_proteins), ",")) %>%
unnest(orthogroups.c_variabilis_genome_proteins) -> variabilis_single_col_orth
variabilis_single_col_orth %>%
mutate(across(where(is.character), str_trim)) ->single_col_orth
variabilis_ogs_pathways = data.frame(variabilis_annotations$X.query,variabilis_annotations$EC, variabilis_annotations$KEGG_Pathway, variabilis_annotations$BRITE)
colnames(variabilis_single_col_orth) = c("Orthogroup", "protein_name")
colnames(variabilis_ogs_pathways) = c("protein_name", "EC_number", "KEGG_pathways", "BRITE")
labelled_ogs_variabilis = merge(variabilis_single_col_orth, variabilis_ogs_pathways, by = "protein_name", keep.x = TRUE)
labelled_ogs_variabilis <- labelled_ogs_variabilis[-c(1)]
#sorokiniana
reduced_orthogroups = data.frame(orthogroups$Orthogroup, orthogroups$c_sorokiniana_genome_proteins)
reduced_orthogroups %>%
mutate(orthogroups.c_sorokiniana_genome_proteins = strsplit(as.character(orthogroups.c_sorokiniana_genome_proteins), ",")) %>%
unnest(orthogroups.c_sorokiniana_genome_proteins) -> sorokiniana_single_col_orth
sorokiniana_single_col_orth %>%
mutate(across(where(is.character), str_trim)) ->single_col_orth
sorokiniana_ogs_pathways = data.frame(sorokiniana_annotations$X.query,sorokiniana_annotations$EC, sorokiniana_annotations$KEGG_Pathway, sorokiniana_annotations$BRITE)
colnames(sorokiniana_single_col_orth) = c("Orthogroup", "protein_name")
colnames(sorokiniana_ogs_pathways) = c("protein_name", "EC_number", "KEGG_pathways", "BRITE")
labelled_ogs_sorokiniana = merge(sorokiniana_single_col_orth, sorokiniana_ogs_pathways, by = "protein_name", keep.x = TRUE)
labelled_ogs_sorokiniana <- labelled_ogs_sorokiniana[-c(1)]
#Combine annotations of orthogroups from each species
annotated_orthogroups = unique(rbind(labelled_ogs_a99, labelled_ogs_vulgaris, labelled_ogs_conductrix, labelled_ogs_sorokiniana, labelled_ogs_variabilis))
pathway = 'map00220'  ## CHANGE THIS TO CHOOSE PATHWAY ##
pathway_ogs = data.frame(annotated_orthogroups$Orthogroup[str_detect(annotated_orthogroups$KEGG_pathways, pathway)],
annotated_orthogroups$EC_number[str_detect(annotated_orthogroups$KEGG_pathways, pathway)])
colnames(pathway_ogs) = c("Orthogroup", "EC")
#Load number of genes in each orthogroup
gene_count = read.csv('../../OrthoFinder/Results_Aug14/Orthogroups/Orthogroups.GeneCount.tsv', sep = '\t')
pathway_counts = merge(pathway_ogs, gene_count, by = 'Orthogroup')
#Make heatmap of counts
a99 = data.frame(pathway_counts$Orthogroup, 'A99', pathway_counts$A99_genome_proteins)
mic = data.frame(pathway_counts$Orthogroup, 'm_conductrix', pathway_counts$m_conductrix_genome_proteins)
var = data.frame(pathway_counts$Orthogroup, 'c_variabilis', pathway_counts$c_variabilis_genome_proteins)
#Make heatmap of counts
a99 = data.frame(pathway_counts$Orthogroup, 'A99', pathway_counts$A99_genome_proteins)
#Make heatmap of counts
a99 = data.frame(pathway_counts$Orthogroup, 'a99', pathway_counts$A99_genome_proteins)
View(pathway_counts)
#Make heatmap of counts
a99 = data.frame(pathway_counts$Orthogroup, 'a99', pathway_counts$a99_genome_proteins)
mic = data.frame(pathway_counts$Orthogroup, 'm_conductrix', pathway_counts$m_conductrix_genome_proteins)
var = data.frame(pathway_counts$Orthogroup, 'c_variabilis', pathway_counts$c_variabilis_genome_proteins)
vul = data.frame(pathway_counts$Orthogroup, 'c_vulgaris', pathway_counts$c_vulgaris_genome_proteins)
sor = data.frame(pathway_counts$Orthogroup, 'c_sorokiniana', pathway_counts$c_sorokiniana_genome_proteins)
colnames(a99) = c("Orthogroup", "Species", "Count")
colnames(mic) = c("Orthogroup", "Species", "Count")
colnames(var) = c("Orthogroup", "Species", "Count")
colnames(vul) = c("Orthogroup", "Species", "Count")
colnames(sor) = c("Orthogroup", "Species", "Count")
heatmap = rbind(a99, mic, var, vul, sor)
positions = c("m_conductrix","A99","c_variabilis", "c_vulgaris", "c_sorokiniana")
p = ggplot(heatmap, aes(y = Orthogroup, x = Species , fill = Count)) + geom_tile() + scale_x_discrete(limits = positions) + scale_fill_viridis_c(option = 'D', limits = c(0,4))
p
#Make heatmap of counts
a99 = data.frame(pathway_counts$Orthogroup, 'A99', pathway_counts$a99_genome_proteins)
colnames(a99) = c("Orthogroup", "Species", "Count")
heatmap = rbind(a99, mic, var, vul, sor)
positions = c("m_conductrix","A99","c_variabilis", "c_vulgaris", "c_sorokiniana")
p = ggplot(heatmap, aes(y = Orthogroup, x = Species , fill = Count)) + geom_tile() + scale_x_discrete(limits = positions) + scale_fill_viridis_c(option = 'D', limits = c(0,4))
p
p + scale_y_discrete(limits = pathway_ogs$Orthogroup)
reorder(pathway_ogs, by = 'EC')
order(pathway_ogs)
pathway_ogs %>% arrange(EC) -> pathway_ogs
#Load number of genes in each orthogroup
gene_count = read.csv('../../OrthoFinder/Results_Aug14/Orthogroups/Orthogroups.GeneCount.tsv', sep = '\t')
pathway_counts = merge(pathway_ogs, gene_count, by = 'Orthogroup')
#Make heatmap of counts
a99 = data.frame(pathway_counts$Orthogroup, 'A99', pathway_counts$a99_genome_proteins)
mic = data.frame(pathway_counts$Orthogroup, 'm_conductrix', pathway_counts$m_conductrix_genome_proteins)
var = data.frame(pathway_counts$Orthogroup, 'c_variabilis', pathway_counts$c_variabilis_genome_proteins)
vul = data.frame(pathway_counts$Orthogroup, 'c_vulgaris', pathway_counts$c_vulgaris_genome_proteins)
sor = data.frame(pathway_counts$Orthogroup, 'c_sorokiniana', pathway_counts$c_sorokiniana_genome_proteins)
colnames(a99) = c("Orthogroup", "Species", "Count")
colnames(mic) = c("Orthogroup", "Species", "Count")
colnames(var) = c("Orthogroup", "Species", "Count")
colnames(vul) = c("Orthogroup", "Species", "Count")
colnames(sor) = c("Orthogroup", "Species", "Count")
heatmap = rbind(a99, mic, var, vul, sor)
positions = c("m_conductrix","A99","c_variabilis", "c_vulgaris", "c_sorokiniana")
p = ggplot(heatmap, aes(y = Orthogroup, x = Species , fill = Count)) + geom_tile() + scale_x_discrete(limits = positions) + scale_fill_viridis_c(option = 'D', limits = c(0,4))
p + scale_y_discrete(limits = pathway_ogs$Orthogroup)
pathway = 'map00910'  ## CHANGE THIS TO CHOOSE PATHWAY ##
pathway_ogs = data.frame(annotated_orthogroups$Orthogroup[str_detect(annotated_orthogroups$KEGG_pathways, pathway)],
annotated_orthogroups$EC_number[str_detect(annotated_orthogroups$KEGG_pathways, pathway)])
colnames(pathway_ogs) = c("Orthogroup", "EC")
pathway_ogs %>% arrange(EC) -> pathway_ogs
#Load number of genes in each orthogroup
gene_count = read.csv('../../OrthoFinder/Results_Aug14/Orthogroups/Orthogroups.GeneCount.tsv', sep = '\t')
pathway_counts = merge(pathway_ogs, gene_count, by = 'Orthogroup')
#Make heatmap of counts
a99 = data.frame(pathway_counts$Orthogroup, 'A99', pathway_counts$a99_genome_proteins)
mic = data.frame(pathway_counts$Orthogroup, 'm_conductrix', pathway_counts$m_conductrix_genome_proteins)
var = data.frame(pathway_counts$Orthogroup, 'c_variabilis', pathway_counts$c_variabilis_genome_proteins)
vul = data.frame(pathway_counts$Orthogroup, 'c_vulgaris', pathway_counts$c_vulgaris_genome_proteins)
sor = data.frame(pathway_counts$Orthogroup, 'c_sorokiniana', pathway_counts$c_sorokiniana_genome_proteins)
colnames(a99) = c("Orthogroup", "Species", "Count")
colnames(mic) = c("Orthogroup", "Species", "Count")
colnames(var) = c("Orthogroup", "Species", "Count")
colnames(vul) = c("Orthogroup", "Species", "Count")
colnames(sor) = c("Orthogroup", "Species", "Count")
heatmap = rbind(a99, mic, var, vul, sor)
positions = c("m_conductrix","A99","c_variabilis", "c_vulgaris", "c_sorokiniana")
p = ggplot(heatmap, aes(y = Orthogroup, x = Species , fill = Count)) + geom_tile() + scale_x_discrete(limits = positions) + scale_fill_viridis_c(option = 'D', limits = c(0,4))
p + scale_y_discrete(limits = pathway_ogs$Orthogroup)
## Get ids of one-to-one orthologues in pathway for dn/ds calculation
setwd('/Users/catrionaharrison/documents/bioinformatics/rp2/genomes/evolution_rates/ids')
one_to_one = data.frame(pathway_counts$Orthogroup[pathway_counts$A99_genome_proteins ==1 & pathway_counts$c_sorokiniana_genome_proteins
==1 & pathway_counts$c_variabilis_genome_proteins == 1
& pathway_counts$c_vulgaris_genome_proteins == 1
& pathway_counts$m_conductrix_genome_proteins ==1])
one_to_one = cbind(one_to_one, 'm_conductrix', 'A99', 'c_variabilis', 'c_vulgaris', 'c_sorokiniana')
colnames(one_to_one) = c('Orthogroup', 'm_conductrix', 'A99', 'c_variabilis', 'c_vulgaris', 'c_sorokiniana')
one_to_one = cbind(one_to_one, 'm_conductrix', 'A99', 'c_variabilis', 'c_vulgaris', 'c_sorokiniana')
one_to_one = data.frame(pathway_counts$Orthogroup[pathway_counts$A99_genome_proteins ==1 & pathway_counts$c_sorokiniana_genome_proteins
==1 & pathway_counts$c_variabilis_genome_proteins == 1
& pathway_counts$c_vulgaris_genome_proteins == 1
& pathway_counts$m_conductrix_genome_proteins ==1])
one_to_one = data.frame(pathway_counts$Orthogroup[pathway_counts$a99_genome_proteins ==1 & pathway_counts$c_sorokiniana_genome_proteins
==1 & pathway_counts$c_variabilis_genome_proteins == 1
& pathway_counts$c_vulgaris_genome_proteins == 1
& pathway_counts$m_conductrix_genome_proteins ==1])
View(one_to_one)
colnames(one_to_one) = c('Orthogroup', 'm_conductrix', 'A99', 'c_variabilis', 'c_vulgaris', 'c_sorokiniana')
one_to_one = cbind(one_to_one, 'm_conductrix', 'A99', 'c_variabilis', 'c_vulgaris', 'c_sorokiniana')
colnames(one_to_one) = c('Orthogroup', 'm_conductrix', 'A99', 'c_variabilis', 'c_vulgaris', 'c_sorokiniana')
for (i in one_to_one$Orthogroup)
{
pathway_ogs = as.character(orthogroups[orthogroups$Orthogroup==i,2:6])
writeLines(pathway_ogs, paste(i, '.txt', sep = ''))
}
setwd('/Users/catrionaharrison/documents/bioinformatics/rp2/genomes/Genome\ stats')
stats = read.csv('genome_stats.txt', sep = '\t')
q = ggplot(stats, aes(x = Species, y = Genome_size)) + geom_bar(stat = 'identity', width = 0.8, , fill = '#F5D440') + coord_flip() + scale_x_discrete(limits = rev(order))
q + theme_light() + labs(y = "Genome size (Mbp)")
protein_coding = data.frame(stats$Species, stats$Protein_coding, 'zzz')
pseudo = data.frame(stats$Species, stats$Pseudogenes, 'Pseudogenes')
setwd('/Users/catrionaharrison/documents/bioinformatics/rp2/genomes/Genome\ stats')
stats = read.csv('genome_stats.txt', sep = '\t')
q = ggplot(stats, aes(x = Species, y = Genome_size)) + geom_bar(stat = 'identity', width = 0.8, , fill = '#F5D440') + coord_flip() + scale_x_discrete(limits = rev(order))
q + theme_light() + labs(y = "Genome size (Mbp)")
View(stats)
one_to_one = data.frame(pathway_counts$Orthogroup[pathway_counts$a99_genome_proteins ==1 & pathway_counts$c_sorokiniana_genome_proteins
==1 & pathway_counts$c_variabilis_genome_proteins == 1
& pathway_counts$c_vulgaris_genome_proteins == 1
& pathway_counts$m_conductrix_genome_proteins ==1])
one_to_one = cbind(one_to_one, 'm_conductrix', 'A99', 'c_variabilis', 'c_vulgaris', 'c_sorokiniana')
colnames(one_to_one) = c('Orthogroup', 'm_conductrix', 'A99', 'c_variabilis', 'c_vulgaris', 'c_sorokiniana')
stats = read.csv('genome_stats.txt', sep = '\t')
q = ggplot(stats, aes(x = Species, y = Genome_size)) + geom_bar(stat = 'identity', width = 0.8, , fill = '#F5D440') + coord_flip() + scale_x_discrete(limits = rev(order))
View(stats)
order = ('C_sorokiniana', 'M_conductrix', 'A99', 'C_vulgaris', 'C_variabilis')
stats = read.csv('genome_stats.txt', sep = '\t')
order = c('C_sorokiniana', 'M_conductrix', 'A99', 'C_vulgaris', 'C_variabilis')
stats = read.csv('genome_stats.txt', sep = '\t')
q = ggplot(stats, aes(x = Species, y = Genome_size)) + geom_bar(stat = 'identity', width = 0.8, , fill = '#F5D440') + coord_flip() + scale_x_discrete(limits = rev(order))
q + theme_light() + labs(y = "Genome size (Mbp)")
View(stats)
q + theme_light() + labs(y = "Genome size (Mbp)")
order = c('C_sorokiniana', 'M_conductrix', 'A99', 'C_variabilis', 'C_vulgaris')
stats = read.csv('genome_stats.txt', sep = '\t')
q = ggplot(stats, aes(x = Species, y = Genome_size)) + geom_bar(stat = 'identity', width = 0.8, , fill = '#F5D440') + coord_flip() + scale_x_discrete(limits = rev(order))
q + theme_light() + labs(y = "Genome size (Mbp)")
protein_coding = data.frame(stats$Species, stats$Protein_coding, 'zzz')
pseudo = data.frame(stats$Species, stats$Pseudogenes, 'Pseudogenes')
colnames(protein_coding) = c('Species', 'Number', 'Type')
colnames(pseudo) = c('Species', 'Number', 'Type')
genes_chart = rbind(pseudo, protein_coding)
p = ggplot(genes_chart, aes(x = Species, y = Number, group = Type, fill = Type)) + geom_bar(position = 'dodge', stat = 'identity', width = 0.8) + coord_flip() + scale_x_discrete(limits = rev(order))
p +theme_light() + labs(y = 'Number of genes (thousand)') + scale_fill_manual(values = c('#21918c', '#3b528b'), labels = c('Pseudogenes', 'Protein-coding genes'))
getwd()
setwd("../../expanded_gene_families")
setwd("../expanded_gene_families")
setwd("../expanded_gene_families")
duplication_stats = read.csv("duplication_statistics", sep = '\t')
duplication_stats_a99 = data.frame(duplication_stats$Number.of.genes.per.species.in.orthogroup, duplication_stats$A99_genome_proteins, "A99")
colnames(duplication_stats_a99) = c('Number of genes in group', "Number of groups", "Species")
duplication_stats_sor = data.frame(duplication_stats$Number.of.genes.per.species.in.orthogroup, duplication_stats$c_sorokiniana_genome_proteins, "Sorokiniana")
colnames(duplication_stats_sor) = c('Number of genes in group', "Number of groups", "Species")
duplication_stats_var= data.frame(duplication_stats$Number.of.genes.per.species.in.orthogroup, duplication_stats$c_variabilis_genome_proteins, "Variabilis")
colnames(duplication_stats_var) = c('Number of genes in group', "Number of groups", "Species")
duplication_stats_vul= data.frame(duplication_stats$Number.of.genes.per.species.in.orthogroup, duplication_stats$c_vulgaris_genome_proteins, "Vulgaris")
colnames(duplication_stats_vul) = c('Number of genes in group', "Number of groups", "Species")
duplication_stats_con= data.frame(duplication_stats$Number.of.genes.per.species.in.orthogroup, duplication_stats$m_conductrix_genome_proteins, "Conductrix")
colnames(duplication_stats_con) = c('Number of genes in group', "Number of groups", "Species")
dup_stats = rbind(duplication_stats_a99, duplication_stats_con, duplication_stats_sor, duplication_stats_var, duplication_stats_vul)
colnames(dup_stats) = c("No_genes", "No_groups", "Species")
dup_stats$No_genes = as.numeric(dup_stats$No_genes)
dup_stats$No_groups = as.numeric(dup_stats$No_groups)
p =ggplot(dup_stats, aes(x= No_genes, y = No_groups, group = Species, color = Species)) + geom_line() + labs(y = '% of orthogroups', x = "Number of genes in orthogroup") + xlim(0,8)
p
setwd("~/Documents/Bioinformatics/rp2/Scripts/R scripts")
setwd(dirname(getActiveDocumentContext()$path))
install.packages("rstudioapi")
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
setwd(dirname(getActiveDocumentContext()$path))
getwd()
setwd('../genomes/proteins/function_annotations')
setwd('../../genomes/proteins/function_annotations')
## Get ids of one-to-one orthologues in pathway for dn/ds calculation
setwd('../../evolution_rates/ids')
one_to_one = data.frame(pathway_counts$Orthogroup[pathway_counts$a99_genome_proteins ==1 & pathway_counts$c_sorokiniana_genome_proteins
==1 & pathway_counts$c_variabilis_genome_proteins == 1
& pathway_counts$c_vulgaris_genome_proteins == 1
& pathway_counts$m_conductrix_genome_proteins ==1])
setwd(dirname(getActiveDocumentContext()$path))
setwd('../../genomes/Genome\ stats')
setwd("../expanded_gene_families")
library(rstudioapi)
library(ggplot2)
setwd('../../genomes/OrthoFinder/Results_Aug14/Orthogroups')
table = read.table('Orthogroups.tsv', sep = '\t', header = TRUE)
new = data.frame(table$c_variabilis_genome_proteins[(table$c_sorokiniana_genome_proteins == "") & (table$c_vulgaris_genome_proteins == "") & (table$A99_genome_proteins != "") & (table$c_variabilis_genome_proteins != "") & (table$m_conductrix_genome_proteins != "")])
conductrix_lost = data.frame(table$c_vulgaris_genome_proteins[(table$m_conductrix_genome_proteins == "") & table$c_sorokiniana_genome_proteins != "" & table$c_vulgaris_genome_proteins != ""])
variabilis_lost = data.frame(table$c_vulgaris_genome_proteins[(table$c_variabilis_genome_proteins == "") & table$c_sorokiniana_genome_proteins != "" & table$c_vulgaris_genome_proteins != ""])
a99_lost = data.frame(table$c_vulgaris_genome_proteins[(table$A99_genome_proteins == "") & table$c_sorokiniana_genome_proteins != "" & table$c_vulgaris_genome_proteins != ""])
colnames(variabilis_lost) = "variabilis_lost"
colnames(a99_lost) = "a99_lost"
colnames(conductrix_lost) = "conductrix_lost"
lost_conductrix = separate_rows(conductrix_lost, conductrix_lost, sep = ",")
lost_a99 =  separate_rows(a99_lost, a99_lost, sep = ",")
library(tidyr)
lost_conductrix = separate_rows(conductrix_lost, conductrix_lost, sep = ",")
lost_a99 =  separate_rows(a99_lost, a99_lost, sep = ",")
lost_variabilis = separate_rows(variabilis_lost, variabilis_lost, sep = ",")
gene_count = read.csv('Orthogroups.GeneCount.tsv', sep = '\t')
conductrix_duplicated = data.frame(gene_count$Orthogroup[(gene_count$m_conductrix_genome_proteins > gene_count$c_sorokiniana_genome_proteins) & (gene_count$m_conductrix_genome_proteins
> gene_count$c_vulgaris_genome_proteins)])
variabilis_duplicated = gene_count$Orthogroup[(gene_count$c_variabilis_genome_proteins > gene_count$c_sorokiniana_genome_proteins) & (gene_count$c_variabilis_genome_proteins
> gene_count$c_vulgaris_genome_proteins)]
a99_duplicated = gene_count$Orthogroup[(gene_count$A99_genome_proteins > gene_count$c_sorokiniana_genome_proteins) & (gene_count$A99_genome_proteins
#Conductrix                                                                                                                                                                                                                                             > gene_count$c_vulgaris_genome_proteins)]
duplicated_conductrix = c()
#Conductrix                                                                                                                                                                                                                                             > gene_count$c_vulgaris_genome_proteins)]
duplicated_conductrix = c()
for (i in conductrix_duplicated$gene_count.Orthogroup..gene_count.m_conductrix_genome_proteins...)
{
duplicated_conductrix = append(duplicated_conductrix, table$m_conductrix_genome_proteins[table$Orthogroup == i])
}
duplicated_conductrix = data.frame(duplicated_conductrix)
colnames(duplicated_conductrix) = "duplicated_conductrix"
duplicated_conductrix = separate_rows(duplicated_conductrix, duplicated_conductrix, sep = ",")
#variabilis
duplicated_variabilis = c()
for (i in variabilis_duplicated)
{
duplicated_variabilis = append(duplicated_variabilis, table$c_variabilis_genome_proteins[table$Orthogroup == i])
}
setwd('../../../expanded_gene_families/Results')
a99_biological_process = read.csv('GOBioProcessA99.txt', sep = '\t', )
a99_biological_process = data.frame(a99_biological_process$GO.biological.process.complete, a99_biological_process$c_variabilis_proteins.fasta_arabidopsis_duplicates.txt..fold.Enrichment., a99_biological_process$c_variabilis_proteins.fasta_arabidopsis_duplicates.txt..FDR.)
colnames(a99_biological_process) = c("GO.biological.process", "Fold.Enrichment", "FDR")
p =ggplot(a99_biological_process, aes(x = reorder(GO.biological.process, -Fold.Enrichment), y = Fold.Enrichment, fill = FDR))  + scale_fill_gradient(limits = c(0,0.035))
p + geom_col() + coord_flip() + labs(x = "GO Biological Process", y = "Fold Enrichment")
a99_mol_func = read.csv('GOMolFuncA99.txt', sep = '\t')
a99_mol_func = data.frame(a99_mol_func$GO.molecular.function.complete, a99_mol_func$a99_proteins.fasta_arabidopsis_duplicates.txt..fold.Enrichment., a99_mol_func$a99_proteins.fasta_arabidopsis_duplicates.txt..FDR.)
colnames(a99_mol_func) = c("GO.molecular.function", "Fold.Enrichment", "FDR")
p =ggplot(a99_mol_func, aes(x = reorder(GO.molecular.function, -Fold.Enrichment), y = Fold.Enrichment, fill = FDR)) + scale_fill_gradient(limits = c(0,0.035))
p + geom_col() + coord_flip() + labs(x = "GO Molecular Function", y = "Fold Enrichment")
var_biological_process = read.csv('GOBioProcessVariabilis.txt', sep = '\t')
var_biological_process = data.frame(var_biological_process$GO.biological.process.complete, var_biological_process$c_variabilis_proteins.fasta_arabidopsis_duplicates.txt..fold.Enrichment., var_biological_process$c_variabilis_proteins.fasta_arabidopsis_duplicates.txt..FDR.)
colnames(var_biological_process) = c("GO.biological.process", "Fold.Enrichment", "FDR")
p =ggplot(var_biological_process, aes(x = reorder(GO.biological.process, -Fold.Enrichment), y = Fold.Enrichment, fill = FDR)) + scale_fill_gradient(limits = c(0,0.038))
p + geom_col() + coord_flip() + labs(x = "GO Biological Process", y = "Fold Enrichment")
var_mol_func = read.csv('GOMolFuncVariabilis.txt', sep = '\t', )
var_mol_func = data.frame(var_mol_func$GO.molecular.function.complete, var_mol_func$c_variabilis_proteins.fasta_arabidopsis_duplicates.txt..fold.Enrichment., var_mol_func$c_variabilis_proteins.fasta_arabidopsis_duplicates.txt..FDR.)
colnames(var_mol_func) = c("GO.molecular.function", "Fold.Enrichment", "FDR")
p =ggplot(var_mol_func, aes(x = reorder(GO.molecular.function, -Fold.Enrichment), y = Fold.Enrichment, fill = FDR)) + scale_fill_gradient(limits = c(0,0.035))
p + geom_col() + coord_flip() + labs(x = "GO Molecular Function", y = "Fold Enrichment")
p + geom_col() + coord_flip() + labs(x = "GO Molecular Function", y = "Fold Enrichment")
reduced_orthogroups = separate_rows(reduced_orthogroups, a99_genome_proteins, ',')
reduced_orthogroups = separate_rows(reduced_orthogroups, orthogroups.a99_genome_proteins, ',')
View(reduced_orthogroups)
#Make annotations into a single column and label OGs with KEGG pathways
#A99
reduced_orthogroups = data.frame(orthogroups$Orthogroup, orthogroups$a99_genome_proteins)
reduced_orthogroups = separate_rows(reduced_orthogroups, orthogroups.a99_genome_proteins, ',')
reduced_orthogroups = separate_rows(reduced_orthogroups, orthogroups.a99_genome_proteins, sep = ',')
View(reduced_orthogroups)
#Make annotations into a single column and label OGs with KEGG pathways
#A99
reduced_orthogroups = data.frame(orthogroups$Orthogroup, orthogroups$a99_genome_proteins)
reduced_orthogroups %>%
mutate(orthogroups.a99_genome_proteins = strsplit(as.character(orthogroups.a99_genome_proteins), ",")) %>%
unnest(orthogroups.a99_genome_proteins) -> a99_single_col_orth
library(dplyr)
reduced_orthogroups %>%
mutate(orthogroups.a99_genome_proteins = strsplit(as.character(orthogroups.a99_genome_proteins), ",")) %>%
unnest(orthogroups.a99_genome_proteins) -> a99_single_col_orth
View(a99_single_col_orth)
reduced_orthogroups = reduced_orthogroups$orthogroups.a99_genome_proteins!= ''
reduced_orthogroups = reduced_orthogroups[orthogroups.a99_genome_proteins!= '']
reduced_orthogroups = reduced_orthogroups[,orthogroups.a99_genome_proteins!= '']
a99_single_col_orth = separate_rows(reduced_orthogroups, orthogroups.a99_genome_proteins, sep = ',')
a99_single_col_orth %>%
mutate(across(where(is.character), str_trim)) ->single_col_orth
library(dplyr)
a99_single_col_orth %>%
mutate(across(where(is.character), str_trim)) ->single_col_orth
a99_single_col_orth = separate_rows(reduced_orthogroups, orthogroups.a99_genome_proteins, sep = ',')
#Make annotations into a single column and label OGs with KEGG pathways
#A99
reduced_orthogroups = data.frame(orthogroups$Orthogroup, orthogroups$a99_genome_proteins)
a99_single_col_orth = separate_rows(reduced_orthogroups, orthogroups.a99_genome_proteins, sep = ',')
a99_single_col_orth %>%
mutate(across(where(is.character), str_trim)) ->single_col_orth
library(stringr)
a99_single_col_orth %>%
mutate(across(where(is.character), str_trim)) -> single_col_orth
View(single_col_orth)
a99_single_col_orth %>% filter(complete.cases(.))
View(a99_single_col_orth)
a99_single_col_orth %>% mutate(across(where(is.character), str_trim))
a99_single_col_orth %>% filter(complete.cases(.))
#Make annotations into a single column and label OGs with KEGG pathways
#A99
reduced_orthogroups = data.frame(orthogroups$Orthogroup, orthogroups$a99_genome_proteins)
a99_single_col_orth = separate_rows(reduced_orthogroups, orthogroups.a99_genome_proteins, sep = ',')
View(a99_single_col_orth)
a99_single_col_orth %>% mutate(across(where(is.character), str_trim))
orthogroup_genes = data.frame(orthogroups[ , 1], orthogroups[ , i]
separated_genes = separate_rows(orthogroup_genes, , sep = ',')
}
#Make annotations into a single column and label OGs with KEGG pathways
#A99
reduced_orthogroups = data.frame(orthogroups$Orthogroup, orthogroups$a99_genome_proteins)
a99_single_col_orth = separate_rows(reduced_orthogroups, orthogroups.a99_genome_proteins, sep = ',')
trimmed_a99_single_col_orth <- a99_single_col_orth %>% mutate(across(where(is.character), str_trim))
<- trimmed_a99_single_col_orth %>% filter(complete.cases(.))
a99_ogs_pathways = data.frame(a99_annotations$X.query, a99_annotations$EC, a99_annotations$KEGG_Pathway, a99_annotations$BRITE)
colnames(a99_single_col_orth) = c("Orthogroup", "protein_name")
colnames(a99_ogs_pathways) = c("protein_name", "EC_number", "KEGG_pathways", "BRITE")
labelled_ogs_a99 = merge(a99_single_col_orth, a99_ogs_pathways, by = "protein_name", keep.x = TRUE)
labelled_ogs_a99 <- labelled_ogs_a99[-c(1)]
#conductrix
reduced_orthogroups = data.frame(orthogroups$Orthogroup, orthogroups$m_conductrix_genome_proteins)
reduced_orthogroups %>%
mutate(orthogroups.m_conductrix_genome_proteins = strsplit(as.character(orthogroups.m_conductrix_genome_proteins), ",")) %>%
unnest(orthogroups.m_conductrix_genome_proteins) -> conductrix_single_col_orth
conductrix_single_col_orth %>%
mutate(across(where(is.character), str_trim)) ->single_col_orth
conductrix_ogs_pathways = data.frame(conductrix_annotations$X.query,conductrix_annotations$EC, conductrix_annotations$KEGG_Pathway, conductrix_annotations$BRITE)
colnames(conductrix_single_col_orth) = c("Orthogroup", "protein_name")
colnames(conductrix_ogs_pathways) = c("protein_name", "EC_number", "KEGG_pathways", "BRITE")
labelled_ogs_conductrix = merge(conductrix_single_col_orth, conductrix_ogs_pathways, by = "protein_name", keep.x = TRUE)
labelled_ogs_conductrix <- labelled_ogs_conductrix[-c(1)]
#vulgaris
reduced_orthogroups = data.frame(orthogroups$Orthogroup, orthogroups$c_vulgaris_genome_proteins)
reduced_orthogroups %>%
mutate(orthogroups.c_vulgaris_genome_proteins = strsplit(as.character(orthogroups.c_vulgaris_genome_proteins), ",")) %>%
unnest(orthogroups.c_vulgaris_genome_proteins) -> vulgaris_single_col_orth
vulgaris_single_col_orth %>%
mutate(across(where(is.character), str_trim)) ->single_col_orth
vulgaris_ogs_pathways = data.frame(vulgaris_annotations$X.query,vulgaris_annotations$EC, vulgaris_annotations$KEGG_Pathway, vulgaris_annotations$BRITE)
colnames(vulgaris_single_col_orth) = c("Orthogroup", "protein_name")
colnames(vulgaris_ogs_pathways) = c("protein_name", "EC_number", "KEGG_pathways", "BRITE")
labelled_ogs_vulgaris = merge(vulgaris_single_col_orth, vulgaris_ogs_pathways, by = "protein_name", keep.x = TRUE)
labelled_ogs_vulgaris <- labelled_ogs_vulgaris[-c(1)]
#variabilis
reduced_orthogroups = data.frame(orthogroups$Orthogroup, orthogroups$c_variabilis_genome_proteins)
reduced_orthogroups %>%
mutate(orthogroups.c_variabilis_genome_proteins = strsplit(as.character(orthogroups.c_variabilis_genome_proteins), ",")) %>%
unnest(orthogroups.c_variabilis_genome_proteins) -> variabilis_single_col_orth
variabilis_single_col_orth %>%
mutate(across(where(is.character), str_trim)) ->single_col_orth
variabilis_ogs_pathways = data.frame(variabilis_annotations$X.query,variabilis_annotations$EC, variabilis_annotations$KEGG_Pathway, variabilis_annotations$BRITE)
colnames(variabilis_single_col_orth) = c("Orthogroup", "protein_name")
colnames(variabilis_ogs_pathways) = c("protein_name", "EC_number", "KEGG_pathways", "BRITE")
labelled_ogs_variabilis = merge(variabilis_single_col_orth, variabilis_ogs_pathways, by = "protein_name", keep.x = TRUE)
labelled_ogs_variabilis <- labelled_ogs_variabilis[-c(1)]
#sorokiniana
reduced_orthogroups = data.frame(orthogroups$Orthogroup, orthogroups$c_sorokiniana_genome_proteins)
reduced_orthogroups %>%
mutate(orthogroups.c_sorokiniana_genome_proteins = strsplit(as.character(orthogroups.c_sorokiniana_genome_proteins), ",")) %>%
unnest(orthogroups.c_sorokiniana_genome_proteins) -> sorokiniana_single_col_orth
sorokiniana_single_col_orth %>%
mutate(across(where(is.character), str_trim)) ->single_col_orth
sorokiniana_ogs_pathways = data.frame(sorokiniana_annotations$X.query,sorokiniana_annotations$EC, sorokiniana_annotations$KEGG_Pathway, sorokiniana_annotations$BRITE)
colnames(sorokiniana_single_col_orth) = c("Orthogroup", "protein_name")
colnames(sorokiniana_ogs_pathways) = c("protein_name", "EC_number", "KEGG_pathways", "BRITE")
labelled_ogs_sorokiniana = merge(sorokiniana_single_col_orth, sorokiniana_ogs_pathways, by = "protein_name", keep.x = TRUE)
labelled_ogs_sorokiniana <- labelled_ogs_sorokiniana[-c(1)]
#Combine annotations of orthogroups from each species
annotated_orthogroups = unique(rbind(labelled_ogs_a99, labelled_ogs_vulgaris, labelled_ogs_conductrix, labelled_ogs_sorokiniana, labelled_ogs_variabilis))
# Pathway heatmap
pathway = 'map00910'  ## CHANGE THIS TO CHOOSE PATHWAY ##
pathway_ogs = data.frame(annotated_orthogroups$Orthogroup[str_detect(annotated_orthogroups$KEGG_pathways, pathway)],
annotated_orthogroups$EC_number[str_detect(annotated_orthogroups$KEGG_pathways, pathway)])
colnames(pathway_ogs) = c("Orthogroup", "EC")
pathway_ogs %>% arrange(EC) -> pathway_ogs
#pathway_ogs = annotated_orthogroups$Orthogroup[str_detect(annotated_orthogroups$KEGG_pathways, pathway)]
#pathway = data.frame(pathway_ogs)
#colnames(pathway) = c("Orthogroup")
#Load number of genes in each orthogroup
gene_count = read.csv('../../OrthoFinder/Results_Aug14/Orthogroups/Orthogroups.GeneCount.tsv', sep = '\t')
#Get number of genes for each orthogroup in the pathway
pathway_counts = merge(pathway_ogs, gene_count, by = 'Orthogroup')
#Make heatmap of counts
a99 = data.frame(pathway_counts$Orthogroup, 'A99', pathway_counts$a99_genome_proteins)
mic = data.frame(pathway_counts$Orthogroup, 'm_conductrix', pathway_counts$m_conductrix_genome_proteins)
var = data.frame(pathway_counts$Orthogroup, 'c_variabilis', pathway_counts$c_variabilis_genome_proteins)
vul = data.frame(pathway_counts$Orthogroup, 'c_vulgaris', pathway_counts$c_vulgaris_genome_proteins)
sor = data.frame(pathway_counts$Orthogroup, 'c_sorokiniana', pathway_counts$c_sorokiniana_genome_proteins)
colnames(a99) = c("Orthogroup", "Species", "Count")
colnames(mic) = c("Orthogroup", "Species", "Count")
colnames(var) = c("Orthogroup", "Species", "Count")
colnames(vul) = c("Orthogroup", "Species", "Count")
colnames(sor) = c("Orthogroup", "Species", "Count")
heatmap = rbind(a99, mic, var, vul, sor)
positions = c("m_conductrix","A99","c_variabilis", "c_vulgaris", "c_sorokiniana")
p = ggplot(heatmap, aes(y = Orthogroup, x = Species , fill = Count)) + geom_tile() + scale_x_discrete(limits = positions) + scale_fill_viridis_c(option = 'D', limits = c(0,4))
p + scale_y_discrete(limits = pathway_ogs$Orthogroup)
## Get ids of one-to-one orthologues in pathway for dn/ds calculation
setwd('../../evolution_rates/ids')
one_to_one = data.frame(pathway_counts$Orthogroup[pathway_counts$a99_genome_proteins ==1 & pathway_counts$c_sorokiniana_genome_proteins
==1 & pathway_counts$c_variabilis_genome_proteins == 1
& pathway_counts$c_vulgaris_genome_proteins == 1
& pathway_counts$m_conductrix_genome_proteins ==1])
one_to_one = cbind(one_to_one, 'm_conductrix', 'A99', 'c_variabilis', 'c_vulgaris', 'c_sorokiniana')
colnames(one_to_one) = c('Orthogroup', 'm_conductrix', 'A99', 'c_variabilis', 'c_vulgaris', 'c_sorokiniana')
for (i in one_to_one$Orthogroup)
{
pathway_ogs = as.character(orthogroups[orthogroups$Orthogroup==i,2:6])
writeLines(pathway_ogs, paste(i, '.txt', sep = ''))
}
for (i in 2:6){
separated_genes = separate_rows(orthogroup_genes, , sep = ',')
for (i in 2:6){
#Read in file for orthogroups in each species
orthogroups = read.csv('../../OrthoFinder/Results_Aug14/Orthogroups/Orthogroups.tsv', sep = '\t')
for (i in 2:6) {
for (i in 2:6) {
orthogroup_genes = data.frame(orthogroups[ , 1], orthogroups[ , i])
separated_genes = separate_rows(orthogroup_genes, , sep = ',')
}
orthogroup_genes = data.frame(orthogroups[ , 1], orthogroups[ , i])
i = 2
orthogroup_genes = data.frame(orthogroups[ , 1], orthogroups[ , i])
View(orthogroups)
View(orthogroups)
View(orthogroups)
#Read in file for orthogroups in each species
orthogroups = read.csv('../../OrthoFinder/Results_Aug14/Orthogroups/Orthogroups.tsv', sep = '\t')
View(one_to_one)
View(orthogroups)
View(one_to_one)
